from falcor import *

def render_graph_HBAOPlus():
    g = RenderGraph('HBAOPlus')
    loadRenderPassLibrary('CSM.dll')
    loadRenderPassLibrary('DeinterleaveTexture.dll')
    loadRenderPassLibrary('AccumulatePass.dll')
    loadRenderPassLibrary('BSDFViewer.dll')
    loadRenderPassLibrary('DLSSPass.dll')
    loadRenderPassLibrary('SceneDebugger.dll')
    loadRenderPassLibrary('Texture2DArrayExtract.dll')
    loadRenderPassLibrary('NRDPass.dll')
    loadRenderPassLibrary('MinimalPathTracer.dll')
    loadRenderPassLibrary('ModulateIllumination.dll')
    loadRenderPassLibrary('DepthPass.dll')
    loadRenderPassLibrary('ConvertFormat.dll')
    loadRenderPassLibrary('TemporalDelayPass.dll')
    loadRenderPassLibrary('RTXDIPass.dll')
    loadRenderPassLibrary('Antialiasing.dll')
    loadRenderPassLibrary('StochasticDepthMap.dll')
    loadRenderPassLibrary('InterleaveTexture.dll')
    loadRenderPassLibrary('DebugPasses.dll')
    loadRenderPassLibrary('BlitPass.dll')
    loadRenderPassLibrary('ToneMapper.dll')
    loadRenderPassLibrary('CrossBilateralBlur.dll')
    loadRenderPassLibrary('WriteStencil.dll')
    loadRenderPassLibrary('SVGFPass.dll')
    loadRenderPassLibrary('ForwardLightingPass.dll')
    loadRenderPassLibrary('WhittedRayTracer.dll')
    loadRenderPassLibrary('VAO.dll')
    loadRenderPassLibrary('LinearizeDepth.dll')
    loadRenderPassLibrary('DepthPeelPass.dll')
    loadRenderPassLibrary('SkyBox.dll')
    loadRenderPassLibrary('RTAO.dll')
    loadRenderPassLibrary('SimplePostFX.dll')
    loadRenderPassLibrary('FLIPPass.dll')
    loadRenderPassLibrary('DualDepthPass.dll')
    loadRenderPassLibrary('ErrorMeasurePass.dll')
    loadRenderPassLibrary('GBuffer.dll')
    loadRenderPassLibrary('HBAOPlus.dll')
    loadRenderPassLibrary('ImageLoader.dll')
    loadRenderPassLibrary('MegakernelPathTracer.dll')
    loadRenderPassLibrary('PixelInspectorPass.dll')
    loadRenderPassLibrary('NVIDIADenoiser.dll')
    loadRenderPassLibrary('OptixDenoiser.dll')
    loadRenderPassLibrary('Utils.dll')
    loadRenderPassLibrary('PathTracer.dll')
    loadRenderPassLibrary('RTAODenoiser.dll')
    DeinterleaveTexture = createPass('DeinterleaveTexture')
    g.addPass(DeinterleaveTexture, 'DeinterleaveTexture')
    HBAOPlus = createPass('HBAOPlus', {'radius': 1.0, 'depthMode': DepthMode.SingleDepth, 'depthBias': 0.10000000149011612, 'exponent': 2.0})
    g.addPass(HBAOPlus, 'HBAOPlus')
    DepthPeelPass = createPass('DepthPeelPass')
    g.addPass(DepthPeelPass, 'DepthPeelPass')
    GBufferRaster = createPass('GBufferRaster', {'outputSize': IOSize.Default, 'samplePattern': SamplePattern.Center, 'sampleCount': 16, 'useAlphaTest': True, 'adjustShadingNormals': True, 'forceCullMode': False, 'cull': CullMode.CullBack})
    g.addPass(GBufferRaster, 'GBufferRaster')
    StochasticDepthMap = createPass('StochasticDepthMap', {'SampleCount': 4, 'Alpha': 0.2, 'CullMode': CullMode.CullBack, 'linearize': True, 'depthFormat': ResourceFormat.D24UnormS8})
    g.addPass(StochasticDepthMap, 'StochasticDepthMap')
    LinearizeDepth = createPass('LinearizeDepth', {'depthFormat': ResourceFormat.R32Float})
    g.addPass(LinearizeDepth, 'LinearizeDepth')
    LinearizeDepth_ = createPass('LinearizeDepth', {'depthFormat': ResourceFormat.R32Float})
    g.addPass(LinearizeDepth_, 'LinearizeDepth_')
    InterleaveTexture = createPass('InterleaveTexture')
    g.addPass(InterleaveTexture, 'InterleaveTexture')
    DeinterleaveTexture_ = createPass('DeinterleaveTexture')
    g.addPass(DeinterleaveTexture_, 'DeinterleaveTexture_')
    Ambient = createPass('ConvertFormat', {'formula': 'I0[xy].xxxx', 'format': ResourceFormat.RGBA8UnormSrgb})
    g.addPass(Ambient, 'Ambient')
    CrossBilateralBlur = createPass('CrossBilateralBlur', {'guardBand': 64})
    g.addPass(CrossBilateralBlur, 'CrossBilateralBlur')
    Diffuse = createPass('ConvertFormat', {'formula': 'I0[xy].x * I1[xy]', 'format': ResourceFormat.RGBA8UnormSrgb})
    g.addPass(Diffuse, 'Diffuse')
    DepthPass = createPass('DepthPass', {'depthFormat': ResourceFormat.D32Float, 'useAlphaTest': True, 'cullMode': CullMode.CullBack})
    g.addPass(DepthPass, 'DepthPass')
    g.addEdge('GBufferRaster.depth', 'DepthPeelPass.depth')
    g.addEdge('GBufferRaster.depth', 'StochasticDepthMap.depthMap')
    g.addEdge('StochasticDepthMap.stochasticDepth', 'HBAOPlus.stochasticDepth')
    g.addEdge('GBufferRaster', 'DepthPeelPass')
    g.addEdge('GBufferRaster.depth', 'LinearizeDepth.depth')
    g.addEdge('HBAOPlus.ambientMap', 'InterleaveTexture.texIn')
    g.addEdge('LinearizeDepth.linearDepth', 'DeinterleaveTexture.texIn')
    g.addEdge('LinearizeDepth', 'LinearizeDepth_')
    g.addEdge('DeinterleaveTexture.texOut', 'HBAOPlus.depth')
    g.addEdge('LinearizeDepth_.linearDepth', 'DeinterleaveTexture_.texIn')
    g.addEdge('LinearizeDepth_', 'DeinterleaveTexture')
    g.addEdge('DeinterleaveTexture_.texOut', 'HBAOPlus.depth2')
    g.addEdge('DeinterleaveTexture', 'DeinterleaveTexture_')
    g.addEdge('DeinterleaveTexture_', 'HBAOPlus')
    g.addEdge('InterleaveTexture.texOut', 'CrossBilateralBlur.color')
    g.addEdge('CrossBilateralBlur.color', 'Ambient.I0')
    g.addEdge('LinearizeDepth.linearDepth', 'CrossBilateralBlur.linear depth')
    g.addEdge('HBAOPlus', 'InterleaveTexture')
    g.addEdge('InterleaveTexture', 'CrossBilateralBlur')
    g.addEdge('GBufferRaster.diffuseOpacity', 'Diffuse.I1')
    g.addEdge('CrossBilateralBlur.color', 'Diffuse.I0')
    g.addEdge('DepthPeelPass.depth2', 'LinearizeDepth_.depth')
    g.addEdge('DepthPeelPass', 'LinearizeDepth')
    g.addEdge('DepthPass.depth', 'GBufferRaster.depth')
    g.addEdge('GBufferRaster.faceNormalW', 'HBAOPlus.normals')
    g.markOutput('Ambient.out')
    g.markOutput('Diffuse.out')
    return g

HBAOPlus = render_graph_HBAOPlus()
try: m.addGraph(HBAOPlus)
except NameError: None
